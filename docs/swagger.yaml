definitions:
  models.Project:
    properties:
      dscription:
        type: string
      id:
        type: integer
      isActive:
        type: boolean
      isArchived:
        type: boolean
      isDeveloping:
        type: boolean
      links:
        items:
          type: string
        type: array
      technologies:
        items:
          $ref: '#/definitions/models.Technology'
        type: array
      title:
        type: string
      version:
        type: string
    type: object
  models.Technology:
    properties:
      id:
        type: integer
      name:
        type: string
      svg:
        type: string
    type: object
info:
  contact: {}
paths:
  /portfolio/projects:
    get:
      consumes:
      - application/json
      description: Get project list
      parameters:
      - collectionFormat: csv
        description: Language ID
        in: query
        items:
          type: integer
        name: tech_id
        type: array
      - description: Is active
        in: query
        name: is_active
        type: boolean
      - description: Is archived
        in: query
        name: is_archived
        type: boolean
      - description: Is developing
        in: query
        name: is_developing
        type: boolean
      - description: Sort field
        in: query
        name: sort_field
        type: string
      - description: Sort order
        in: query
        name: sort_order
        type: string
      - description: Limit of projects
        in: query
        name: limit
        type: integer
      - description: Offset of projects
        in: query
        name: Offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Project
          schema:
            items:
              $ref: '#/definitions/models.Project'
            type: array
        "400":
          description: Bad request
          schema: {}
        "500":
          description: Internal error
          schema: {}
      summary: Project list
      tags:
      - Portfolio
    post:
      consumes:
      - application/json
      description: Create project and write to database
      parameters:
      - description: Project title
        in: body
        name: title
        required: true
        schema:
          type: string
      - description: Project version
        in: body
        name: version
        required: true
        schema:
          type: string
      - description: Project description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: Language ID
        in: body
        name: language_id
        required: true
        schema:
          type: integer
      - description: Is active
        in: body
        name: isActive
        required: true
        schema:
          type: boolean
      - description: Is archived
        in: body
        name: isArchived
        required: true
        schema:
          type: boolean
      - description: Is developing
        in: body
        name: isDeveloping
        required: true
        schema:
          type: boolean
      - description: Links
        in: body
        name: links
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Project ID
          schema:
            type: integer
        "400":
          description: Bad request
          schema: {}
        "500":
          description: Internal error
          schema: {}
      summary: Create Project
      tags:
      - Portfolio
  /portfolio/projects/{id}:
    delete:
      consumes:
      - application/json
      description: Delete project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Message
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema: {}
        "500":
          description: Internal error
          schema: {}
      summary: Delete Project
      tags:
      - Portfolio
    get:
      consumes:
      - application/json
      description: Get project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Project
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Bad request
          schema: {}
        "404":
          description: Project nor found
          schema: {}
        "500":
          description: Internal error
          schema: {}
      summary: Project
      tags:
      - Portfolio
    patch:
      consumes:
      - application/json
      description: Update project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      - description: Project title
        in: body
        name: title
        schema:
          type: string
      - description: Project version
        in: body
        name: version
        schema:
          type: string
      - description: Project description
        in: body
        name: description
        schema:
          type: string
      - description: Language ID
        in: body
        name: language_id
        schema:
          type: integer
      - description: Is active
        in: body
        name: isActive
        schema:
          type: boolean
      - description: Is archived
        in: body
        name: isArchived
        schema:
          type: boolean
      - description: Is developing
        in: body
        name: isDeveloping
        schema:
          type: boolean
      - description: Links
        in: body
        name: links
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Message
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema: {}
        "404":
          description: Technology not found
          schema: {}
        "500":
          description: Internal error
          schema: {}
      summary: Update Project
      tags:
      - Portfolio
  /portfolio/techs:
    get:
      consumes:
      - application/json
      description: Get technology list
      parameters:
      - collectionFormat: csv
        description: Technology ID
        in: query
        items:
          type: integer
        name: tech_id
        type: array
      - description: Sort field
        in: query
        name: sort_field
        type: string
      - description: Sort order
        in: query
        name: sort_order
        type: string
      - description: Limit of projects
        in: query
        name: limit
        type: integer
      - description: Offset of projects
        in: query
        name: Offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Technology
          schema:
            items:
              $ref: '#/definitions/models.Technology'
            type: array
        "400":
          description: Bad request
          schema: {}
        "500":
          description: Internal error
          schema: {}
      summary: Technology list
      tags:
      - Portfolio
    post:
      consumes:
      - application/json
      description: Create technology and write to database
      parameters:
      - description: Technology name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: Technology svg
        in: body
        name: svg
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Technology ID
          schema:
            type: integer
        "400":
          description: Bad request
          schema: {}
        "500":
          description: Internal error
          schema: {}
      summary: Create Technology
      tags:
      - Portfolio
  /portfolio/techs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete technology
      parameters:
      - description: Technology ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Message
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema: {}
        "404":
          description: Technology not found
          schema: {}
        "500":
          description: Internal error
          schema: {}
      summary: Delete Technology
      tags:
      - Portfolio
    get:
      consumes:
      - application/json
      description: Get technology
      parameters:
      - description: Technology ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Technology
          schema:
            $ref: '#/definitions/models.Technology'
        "400":
          description: Bad request
          schema: {}
        "404":
          description: Technology not found
          schema: {}
        "500":
          description: Internal error
          schema: {}
      summary: Technology
      tags:
      - Portfolio
    patch:
      consumes:
      - application/json
      description: Update technology
      parameters:
      - description: Technology ID
        in: path
        name: id
        required: true
        type: integer
      - description: Technology name
        in: body
        name: name
        schema:
          type: string
      - description: Technology svg
        in: body
        name: svg
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Message
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema: {}
        "404":
          description: Technology not found
          schema: {}
        "500":
          description: Internal error
          schema: {}
      summary: Update Technology
      tags:
      - Portfolio
swagger: "2.0"
